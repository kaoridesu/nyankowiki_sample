@page "/"

@using System.Text.Json
@inject HttpClient HttpClient
@{
}
@{
    // MasterEnemy わんこ = new MasterEnemy(識別番号: 1, 属性id: 1, キャラクター名: "わんこ", 強さ倍率: 100, 体力: 90, ノックバック: 3, 速度: 5, 攻撃力: 8, dps: 5, EnemyRange.単体, 頻度フレーム: 47, 発生フレーム: 8, 射程: 110, お金: 15, "");
    // MasterEnemy にょろ = new MasterEnemy(識別番号: 2, 属性id: 2, キャラクター名: "にょろ", 強さ倍率: 100, 体力: 100, ノックバック: 3, 速度: 8, 攻撃力: 15, dps: 12, EnemyRange.単体, 頻度フレーム: 37, 発生フレーム: 8, 射程: 110, お金: 30, "");
    // MasterEnemy 例のヤツ = new MasterEnemy(識別番号: 3, 属性id: 3, キャラクター名: "例のヤツ", 強さ倍率: 100, 体力: 90, ノックバック: 3, 速度: 5, 攻撃力: 20, dps: 20, EnemyRange.単体, 頻度フレーム: 30, 発生フレーム: 10, 射程: 110, お金: 75, "");
    //
    // List<int> list = new List<int>();
    // list.Add(item:1);
    // List<MasterEnemy> 敵一覧 = new List<MasterEnemy>();
    // 敵一覧.Add(わんこ);
    // 敵一覧.Add(にょろ);
    // 敵一覧.Add(例のヤツ);
    //MasterUnit ネコ = new MasterUnit(識別番号: 1, UnitRank.基本, キャラクター名: "ネコ", カスタマイズレベル:90, 体力: 4450, ノックバック: 3, 速度: 10, 攻撃力: 335, dps: 228, UnitRange.単体,　頻度フレーム: 37, 発生フレーム: 8, 射程: 140, コスト: 75, 再生産フレーム:68,"");
    //MasterUnit ネコビルダー = new MasterUnit(識別番号: 2, UnitRank.基本, キャラクター名: "ネコビルダー", カスタマイズレベル:90, 体力: 4450, ノックバック: 3, 速度: 10, 攻撃力: 35, dps: 228, UnitRange.単体, 頻度フレーム: 37, 発生フレーム: 8, 射程: 140, コスト: 75, 再生産フレーム:68,"");
    //MasterUnit ネコモヒカン = new MasterUnit(識別番号: 3, UnitRank.基本, キャラクター名: "ネコモヒカン", カスタマイズレベル:90, 体力: 8900, ノックバック: 3, 速度: 10, 攻撃力: 712, dps: 578, UnitRange.単体, 頻度フレーム: 37, 発生フレーム: 8, 射程: 140, コスト: 75, 再生産フレーム:68, "");
    //MasteEnemyAttribute 属性1 = new MasterEnemyAttribute(識別番号: 1, 敵のid: 2, EnemyAttributeType.白い敵);
    //MasterEnemyAttribute 属性2 = new MasterEnemyAttribute(識別番号: 2, 敵のid: 2, EnemyAttributeType.白い敵);
    //MasterEnemyAttribute 属性3 = new MasterEnemyAttribute(識別番号: 3, 敵のid: 3, EnemyAttributeType.白い敵);
}
<table class="table" style="font-size:small">
    <thead class="thead-light">
    <tr>
        <th>No</th>
        <th>属性</th>
        <th>キャラクター名</th>
        <th>強さ倍率</th>
        <th>体力</th>
        <th>㎅</th>
        <th>速度</th>
        <th>攻撃力</th>
        <th>DPS</th>
        <th>範囲</th>
        <th>頻度フレーム</th>
        <th>発生フレーム</th>
        <th>射程</th>
        <th>お金</th>
        <th>特性</th>
    </tr>

    </thead>

    <tbody>
    @{
        foreach (var 敵　in 敵一覧)
        {
            <tr>
                <td>@敵.識別番号</td>
                <td>@敵.属性ID</td>
                <td>@敵.キャラクター名</td>
                <td>@敵.強さ倍率</td>
                <td>@敵.体力</td>
                <td>@敵.ノックバック</td>
                <td>@敵.速度</td>
                <td>@敵.攻撃力</td>
                <td>@敵.DPS</td>
                <td>@敵.範囲</td>
                <td>@敵.頻度フレーム</td>
                <td>@敵.発生フレーム</td>
                <td>@敵.射程</td>
                <td>@敵.お金</td>
                <td>@敵.特性</td>
            </tr>
        }


    }

    @* <tr> *@
    @* <td>@わんこ.識別番号</td> *@
    @* <td>@わんこ.属性ID</td> *@
    @* <td>@わんこ.キャラクター名</td> *@
    @* <td>@わんこ.強さ倍率</td> *@
    @* <td>@わんこ.体力</td> *@
    @* <td>@わんこ.ノックバック</td> *@
    @* <td>@わんこ.速度</td> *@
    @* <td>@わんこ.攻撃力</td> *@
    @* <td>@わんこ.DPS</td> *@
    @* <td>@わんこ.範囲</td> *@
    @* <td>@わんこ.頻度フレーム</td> *@
    @* <td>@わんこ.発生フレーム</td> *@
    @* <td>@わんこ.射程</td> *@
    @* <td>@わんこ.お金</td> *@
    @* <td>@わんこ.特性</td> *@
    @* </tr> *@
    @* <tr> *@
    @* <td>@にょろ.識別番号</td> *@
    @* <td>@にょろ.属性ID</td> *@
    @* <td>@にょろ.キャラクター名</td> *@
    @* <td>@にょろ.強さ倍率</td> *@
    @* <td>@にょろ.体力</td> *@
    @* <td>@にょろ.ノックバック</td> *@
    @* <td>@にょろ.速度</td> *@
    @* <td>@にょろ.攻撃力</td> *@
    @* <td>@にょろ.DPS</td> *@
    @* <td>@にょろ.範囲</td> *@
    @* <td>@にょろ.頻度フレーム</td> *@
    @* <td>@にょろ.発生フレーム</td> *@
    @* <td>@にょろ.射程</td> *@
    @* <td>@にょろ.お金</td> *@
    @* <td>@にょろ.特性</td> *@
    @* </tr> *@
    @* <tr> *@
    @* <td>@例のヤツ.識別番号</td> *@
    @* <td>@例のヤツ.属性ID</td> *@
    @* <td>@例のヤツ.キャラクター名</td> *@
    @* <td>@例のヤツ.強さ倍率</td> *@
    @* <td>@例のヤツ.体力</td> *@
    @* <td>@例のヤツ.ノックバック</td> *@
    @* <td>@例のヤツ.速度</td> *@
    @* <td>@例のヤツ.攻撃力</td> *@
    @* <td>@例のヤツ.DPS</td> *@
    @* <td>@例のヤツ.範囲</td> *@
    @* <td>@例のヤツ.頻度フレーム</td> *@
    @* <td>@例のヤツ.発生フレーム</td> *@
    @* <td>@例のヤツ.射程</td> *@
    @* <td>@例のヤツ.お金</td> *@
    @* <td>@例のヤツ.特性</td> *@
    @* </tr> *@
    </tbody>
</table>
<table class="table" style="font-size: small">
    <thead class="thead-light">

    <tr>
        <th>No</th>
        <th>ランク</th>
        <th>キャラクター名</th>
        <th>カスタマイズレベル</th>
        <th>体力</th>
        <th>㎅</th>
        <th>速度</th>
        <th>攻撃力</th>
        <th>DPS</th>
        <th>範囲</th>
        <th>頻度フレーム</th>
        <th>発生フレーム</th>
        <th>射程</th>
        <th>コスト</th>
        <th>発生フレーム</th>
        <th>特性</th>
    </tr>
    </thead>

    <tbody>
    @{
        foreach (var 味方 in 味方一覧)
        {
            <tr>

                <td>@味方.識別番号</td>
                <td>@味方.ランク</td>
                <td>@味方.キャラクター名</td>
                <td>@味方.カスタマイズレベル</td>
                <td>@味方.体力</td>
                <td>@味方.ノックバック</td>
                <td>@味方.速度</td>
                <td>@味方.攻撃力</td>
                <td>@味方.DPS</td>
                <td>@味方.範囲</td>
                <td>@味方.頻度フレーム</td>
                <td>@味方.発生フレーム</td>
                <td>@味方.射程</td>
                <td>@味方.コスト</td>
                <td>@味方.再生産フレーム</td>
                <td>@味方.特性</td>
            </tr>
        }

    }
    </tbody>
</table>
<table class="table" style="font-size:small">
    <thead class="thead-light">
    <tr>
        <th>No</th>
        <th>敵のID</th>
        <th>敵の属性のタイプ</th>
    </tr>

    </thead>

    <tbody>
    @{
        foreach (var 属性　in 属性一覧)
        {
            <tr>
                <td>@属性.識別番号</td>
                <td>@属性.敵のID</td>
                <td>@属性.敵の属性のタイプ</td>

            </tr>
        }


    }
    </tbody>
</table>

@code
{
    List<MasterEnemy> 敵一覧 = new List<MasterEnemy>();
    List<MasterUnit> 味方一覧 = new List<MasterUnit>();
    List<MasterEnemyAttribute> 属性一覧 = new List<MasterEnemyAttribute>();

    protected override async Task OnInitializedAsync()
    {
        string json = await HttpClient.GetStringAsync(requestUri: "https://script.google.com/macros/s/AKfycbxZqFx1QUcjP9OIfItchQ5HFCCT2l-wmolVrq7j1QHO3_lTvdVFEqemL4dgwgRVxUyu4w/exec");
    // Console.WriteLine(json);json

        JsonDocument jsonDocument = JsonDocument.Parse(json);
        JsonElement jsonElement = jsonDocument.RootElement.GetProperty("[D]master_enemy");
        JsonElement.ArrayEnumerator list = jsonElement.EnumerateArray();

        foreach (JsonElement masterEnemyObject in list)
        {
            int 識別番号 = masterEnemyObject.GetProperty("識別番号").GetInt32();
            int 属性ID = masterEnemyObject.GetProperty("属性ID").GetInt32();
            string キャラクター名 = masterEnemyObject.GetProperty("キャラクター名").GetString();
            int 強さ倍率 = masterEnemyObject.GetProperty("強さ倍率").GetInt32();
            int 体力 = masterEnemyObject.GetProperty("体力").GetInt32();
            int ノックバック = masterEnemyObject.GetProperty("ノックバック").GetInt32();
            int 速度 = masterEnemyObject.GetProperty("速度").GetInt32();
            int 攻撃力 = masterEnemyObject.GetProperty("攻撃力").GetInt32();
            int DPS = masterEnemyObject.GetProperty("DPS").GetInt32();
            EnemyRange 範囲 = (EnemyRange) masterEnemyObject.GetProperty("範囲").GetInt32();
            int 頻度フレーム = masterEnemyObject.GetProperty("頻度フレーム").GetInt32();
            int 攻発フレーム = masterEnemyObject.GetProperty("攻発フレーム").GetInt32();
            int 射程 = masterEnemyObject.GetProperty("射程").GetInt32();
            int お金 = masterEnemyObject.GetProperty("お金").GetInt32();
            string 特性 = masterEnemyObject.GetProperty("特性").GetString();

            MasterEnemy masterEnemy = new MasterEnemy(
                識別番号,
                属性ID,
                キャラクター名,
                強さ倍率,
                体力,
                ノックバック,
                速度,
                攻撃力,
                DPS,
                範囲,
                頻度フレーム,
                攻発フレーム,
                射程,
                お金,
                特性);
            敵一覧.Add(masterEnemy);
        }

        string json2 = await HttpClient.GetStringAsync(requestUri: "https://script.google.com/macros/s/AKfycbxZqFx1QUcjP9OIfItchQ5HFCCT2l-wmolVrq7j1QHO3_lTvdVFEqemL4dgwgRVxUyu4w/exec");
    // Console.WriteLine(json);json

        JsonDocument jsonDocument2 = JsonDocument.Parse(json2);
        JsonElement jsonElement2 = jsonDocument2.RootElement.GetProperty("[D]master_unit");
        JsonElement.ArrayEnumerator list2 = jsonElement2.EnumerateArray();

        foreach (JsonElement masterUnitObject in list2)
        {
            int 識別番号 = masterUnitObject.GetProperty("識別番号").GetInt32();
            UnitRank ランク = (UnitRank) masterUnitObject.GetProperty("ランク").GetInt32();
            string キャラクター名 = masterUnitObject.GetProperty("キャラクター名").GetString();
            int カスタマイズレベル = masterUnitObject.GetProperty("カスタマイズレベル").GetInt32();
            int 体力 = masterUnitObject.GetProperty("体力").GetInt32();
            int ノックバック = masterUnitObject.GetProperty("ノックバック").GetInt32();
            int 速度 = masterUnitObject.GetProperty("速度").GetInt32();
            int 攻撃力 = masterUnitObject.GetProperty("攻撃力").GetInt32();
            int DPS = masterUnitObject.GetProperty("DPS").GetInt32();
            UnitRange 範囲 = (UnitRange) masterUnitObject.GetProperty("範囲").GetInt32();
            int 頻度フレーム = masterUnitObject.GetProperty("頻度フレーム").GetInt32();
            int 発生フレーム = masterUnitObject.GetProperty("発生フレーム").GetInt32();
            int 射程 = masterUnitObject.GetProperty("射程").GetInt32();
            int コスト = masterUnitObject.GetProperty("コスト").GetInt32();
            int 再生産フレーム = masterUnitObject.GetProperty("再生産フレーム").GetInt32();
            string 特性 = masterUnitObject.GetProperty("特性").GetString();

            MasterUnit masterUnit = new MasterUnit(
                識別番号,
                ランク,
                キャラクター名,
                カスタマイズレベル,
                体力,
                ノックバック,
                速度,
                攻撃力,
                DPS,
                範囲,
                頻度フレーム,
                発生フレーム,
                射程,
                コスト,
                再生産フレーム,
                特性);
            味方一覧.Add(masterUnit);
        }
        string json3 = await HttpClient.GetStringAsync(requestUri: "https://script.google.com/macros/s/AKfycbxZqFx1QUcjP9OIfItchQ5HFCCT2l-wmolVrq7j1QHO3_lTvdVFEqemL4dgwgRVxUyu4w/exec");
    // Console.WriteLine(json);json

        JsonElement jsonElement3 = jsonDocument.RootElement.GetProperty("[D]master_enemy_attribute");
        JsonElement.ArrayEnumerator list3 = jsonElement3.EnumerateArray();

        foreach (JsonElement masterEnemyAttributeObject in list3)
        {
            int 識別番号 = masterEnemyAttributeObject.GetProperty("識別番号").GetInt32();
            int 敵のID = masterEnemyAttributeObject.GetProperty("敵のID").GetInt32();
            EnemyAttributeType 敵の属性のタイプ= (EnemyAttributeType)masterEnemyAttributeObject.GetProperty("敵の属性のタイプ").GetInt32();


            MasterEnemyAttribute 敵の属性 = new MasterEnemyAttribute(
                識別番号, 
                敵のID,
                敵の属性のタイプ);
            属性一覧.Add(敵の属性);
        }
    }

    public class MasterEnemy
    {
        public int 識別番号;
        public int 属性ID;
        public string キャラクター名;
        public int 強さ倍率;
        public int 体力;
        public int ノックバック;
        public int 速度;
        public int 攻撃力;
        public int DPS;
        public EnemyRange 範囲;
        public int 頻度フレーム;
        public int 発生フレーム;
        public int 射程;
        public int お金;
        public string 特性;
    //コンストラクタ
        public MasterEnemy(int 識別番号, int 属性id, string キャラクター名, int 強さ倍率, int 体力, int ノックバック, int 速度, int 攻撃力, int dps, EnemyRange 範囲, int 頻度フレーム, int 発生フレーム, int 射程, int お金, string 特性)
        {
            this.識別番号 = 識別番号;
            this.属性ID = 属性id;
            this.キャラクター名 = キャラクター名;
            this.強さ倍率 = 強さ倍率;
            this.体力 = 体力;
            this.ノックバック = ノックバック;
            this.速度 = 速度;
            this.攻撃力 = 攻撃力;
            this.DPS = dps;
            this.範囲 = 範囲;
            this.頻度フレーム = 頻度フレーム;
            this.発生フレーム = 発生フレーム;
            this.射程 = 射程;
            this.お金 = お金;
            this.特性 = 特性;
        }
    }

    public class MasterUnit
    {
        public int 識別番号;
        public UnitRank ランク;
        public string キャラクター名;
        public int カスタマイズレベル;
        public int 体力;
        public int ノックバック;
        public int 速度;
        public int 攻撃力;
        public int DPS;
        public UnitRange 範囲;
        public int 頻度フレーム;
        public int 発生フレーム;
        public int 射程;
        public int コスト;
        public int 再生産フレーム;
        public String 特性;

        public MasterUnit(int 識別番号, UnitRank ランク, string キャラクター名, int カスタマイズレベル, int 体力, int ノックバック, int 速度, int 攻撃力, int dps, UnitRange 範囲, int 頻度フレーム, int 発生フレーム, int 射程, int コスト, int 再生産フレーム, string 特性)
        {
            this.識別番号 = 識別番号;
            this.ランク = ランク;
            this.キャラクター名 = キャラクター名;
            this.カスタマイズレベル = カスタマイズレベル;
            this.体力 = 体力;
            this.ノックバック = ノックバック;
            this.速度 = 速度;
            this.攻撃力 = 攻撃力;
            this.DPS = dps;
            this.範囲 = 範囲;
            this.頻度フレーム = 頻度フレーム;
            this.発生フレーム = 発生フレーム;
            this.射程 = 射程;
            this.コスト = コスト;
            this.再生産フレーム = 再生産フレーム;
            this.特性 = 特性;
        }
    }

    public class MasterEnemyAttribute
    {
        public int 識別番号;
        public int 敵のID;
        public EnemyAttributeType 敵の属性のタイプ;

        public MasterEnemyAttribute(int 識別番号, int 敵のid, EnemyAttributeType 敵の属性のタイプ)
        {
            this.識別番号 = 識別番号;
            敵のID = 敵のid;
            this.敵の属性のタイプ = 敵の属性のタイプ;
        }
    }

    public enum UnitRank
    {
        基本 = 1,
        Ex = 2
    }

    public enum UnitRange
    {
        単体 = 1,
        範囲 = 2
    }

    public enum EnemyRange
    {
        単体 = 1,
        範囲 = 2
    }

    public enum EnemyAttributeType
    {
        白い敵 = 1,
        赤い敵 = 2,
        黒い敵 = 3,
        浮いている敵 = 4
    }
    } 